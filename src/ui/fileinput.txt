<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Selezione File/Cartella</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="file-input" data-id="1">
        <input type="text" id="manualInput-1" placeholder="Inserisci percorso...">
        <button class="fileButton" data-id="1">
            <svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                <defs><style>.cls-1{fill:#101820;}</style></defs>
                <g data-name="Layer 39" id="Layer_39">
                    <path class="cls-1" d="M4,28a3,3,0,0,1-3-3V7A3,3,0,0,1,4,4h7a1,1,0,0,1,.77.36L14.8,8H27a1,1,0,0,1,0,2H14.33a1,1,0,0,1-.76-.36L10.53,6H4A1,1,0,0,0,3,7V25a1,1,0,0,0,1,1,1,1,0,0,1,0,2Z"/>
                    <path class="cls-1" d="M25.38,28H4a1,1,0,0,1-1-1.21l3-14A1,1,0,0,1,7,12H30a1,1,0,0,1,1,1.21L28.32,25.63A3,3,0,0,1,25.38,28ZM5.24,26H25.38a1,1,0,0,0,1-.79L28.76,14h-21Z"/>
                </g>
            </svg>
        </button>
        <input type="file" id="fileSelector-1" webkitdirectory directory multiple>
    </div>

    <div class="file-input" data-id="2">
        <input type="text" id="manualInput-2" placeholder="Inserisci percorso...">
        <button class="fileButton" data-id="2">
            <svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                <defs><style>.cls-1{fill:#101820;}</style></defs>
                <g data-name="Layer 39" id="Layer_39">
                    <path class="cls-1" d="M4,28a3,3,0,0,1-3-3V7A3,3,0,0,1,4,4h7a1,1,0,0,1,.77.36L14.8,8H27a1,1,0,0,1,0,2H14.33a1,1,0,0,1-.76-.36L10.53,6H4A1,1,0,0,0,3,7V25a1,1,0,0,0,1,1,1,1,0,0,1,0,2Z"/>
                    <path class="cls-1" d="M25.38,28H4a1,1,0,0,1-1-1.21l3-14A1,1,0,0,1,7,12H30a1,1,0,0,1,1,1.21L28.32,25.63A3,3,0,0,1,25.38,28ZM5.24,26H25.38a1,1,0,0,0,1-.79L28.76,14h-21Z"/>
                </g>
            </svg>
        </button>
        <input type="file" id="fileSelector-2" webkitdirectory directory multiple>
    </div>

    <script src="script.js"></script>
</body>
</html>
body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 100vh;
    margin: 0;
    gap: 20px;
    padding-top: 20px;
}

.file-input {
    position: relative;
    width: 300px;
    height: 50px;
    border: 2px solid #ccc;
    border-radius: 5px;
    background-color: rgba(255, 255, 255, 0.5);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 10px;
}

.file-input input[type="text"] {
    width: calc(100% - 50px);
    padding: 10px;
    box-sizing: border-box;
    border: none;
    background: transparent;
    color: #333;
}

.file-input button {
    background: none;
    border: 2px solid transparent;
    border-radius: 5px;
    cursor: pointer;
    padding: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: border-color 0.3s, transform 0.1s;
}

.file-input button:hover {
    border-color: #007bff;
}

.file-input button:active {
    transform: scale(0.95);
}

.file-input svg {
    width: 24px;
    height: 24px;
    fill: #101820;
}

.file-input input[type="file"] {
    display: none;
}
document.addEventListener('DOMContentLoaded', function() {
    const fileButtons = document.querySelectorAll('.fileButton');
    const fileSelectors = document.querySelectorAll('input[type="file"]');
    const manualInputs = document.querySelectorAll('input[type="text"]');

    fileButtons.forEach(button => {
        button.addEventListener('click', function() {
            const id = this.getAttribute('data-id');
            document.getElementById(`fileSelector-${id}`).click();
        });
    });

    fileSelectors.forEach(selector => {
        selector.addEventListener('change', function() {
            const id = this.id.split('-')[1];
            const manualInput = document.getElementById(`manualInput-${id}`);
            manualInput.value = Array.from(this.files).map(file => file.webkitRelativePath || file.name).join(', ');
        });
    });
});


document.addEventListener('DOMContentLoaded', function() {
    const fileButtons = document.querySelectorAll('.clickFileButton');
    const fileSelectors = document.querySelectorAll('input[type="file"]');
    const manualInputs = document.querySelectorAll('input[type="text"]');

    fileButtons.forEach(button => {
        button.addEventListener('click', function() {
            const id = this.getAttribute('data-id');
            //document.getElementById(`fileSelector-${id}`).click();
            /* TODO: EEL Python logic*/ 
            
        });
    });

    fileSelectors.forEach(selector => {
        selector.addEventListener('change', function() {
            //const id = this.id.split('-')[1];
            //const manualInput = document.getElementById(`manualInput-${id}`);
            //manualInput.value = Array.from(this.files).map(file => file.name).join(', ');
        });
    });
});

function updateEncryptAlgorithm() {
    const selectElement = document.getElementById('selectlist-option');
    const keysLocations = document.getElementById('keys-locations');

    if (selectElement.value === 'RSA') {
        keysLocations.style.display = 'block';
    } else {
        keysLocations.style.display = 'none';
    }
}

